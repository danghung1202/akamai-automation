"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[248],{3274:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"setup-nodejs-package-with-doc","metadata":{"permalink":"/akamai-automation/blog/setup-nodejs-package-with-doc","editUrl":"https://github.com/danghung1202/akamai-automation/tree/main/docs/blog/2024-08-26-setup-nodejs-package-with-doc/index.md","source":"@site/blog/2024-08-26-setup-nodejs-package-with-doc/index.md","title":"How To Set Up the Node.js Package project with Docusaurus","description":"To integrate the Docusaurus documentation site within your Node.js package project and have it under a docs folder, you can follow these steps.","date":"2024-08-26T00:00:00.000Z","tags":[],"readingTime":2.955,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"setup-nodejs-package-with-doc","title":"How To Set Up the Node.js Package project with Docusaurus"},"unlisted":false},"content":"To integrate the Docusaurus documentation site within your Node.js package project and have it under a `docs` folder, you can follow these steps.\\n\\n\x3c!-- truncate --\x3e\\n\\n### 1. **Set Up the Node.js Package**\\n\\n1. **Create a new directory:**\\n   ```bash\\n   mkdir my-node-package\\n   cd my-node-package\\n   ```\\n\\n2. **Initialize a Node.js project:**\\n   ```bash\\n   npm init -y\\n   ```\\n\\n3. **Install necessary dependencies:**\\n   ```bash\\n   npm install --save-dev jest\\n   ```\\n\\n4. **Create a `.gitignore` file:**\\n   ```bash\\n   echo \\"node_modules\\" > .gitignore\\n   ```\\n\\n### 2. **Set Up Docusaurus Inside the `docs` Folder**\\n\\n1. **Create the Docusaurus project inside the `docs` folder:**\\n   ```bash\\n   npx create-docusaurus@latest docs classic\\n   cd docs\\n   ```\\n\\n2. **Update Docusaurus configuration:**\\n   - Open `docusaurus.config.js` inside the `docs` folder and configure the `url` and `baseUrl` as follows:\\n   ```javascript\\n   module.exports = {\\n     // Other configurations...\\n\\n     url: \'https://<username>.github.io\',\\n     baseUrl: \'/<repo-name>/\',\\n     organizationName: \'<username>\', // GitHub organization/user name.\\n     projectName: \'<repo-name>\', // GitHub repo name.\\n\\n     // Other configurations...\\n   };\\n   ```\\n\\n### 3. **Set Up GitHub Actions**\\n\\n1. **Configure GitHub Actions for NPM Publishing**\\n\\n   - Create a GitHub Actions workflow:\\n   \\n   ```bash\\n   mkdir -p .github/workflows\\n   touch .github/workflows/publish.yml\\n   ```\\n\\n   - Edit the `publish.yml` file:\\n   ```yaml\\n   name: Node.js Package\\n\\n   on:\\n     push:\\n       branches:\\n         - main\\n       tags:\\n         - \'v*.*.*\'\\n\\n   jobs:\\n     release:\\n       runs-on: ubuntu-latest\\n\\n       steps:\\n         - name: Check out the code\\n           uses: actions/checkout@v3\\n\\n         - name: Set up Node.js\\n           uses: actions/setup-node@v3\\n           with:\\n             node-version: \'18\'\\n             registry-url: \'https://registry.npmjs.org\'\\n             cache: \'npm\'\\n\\n         - name: Install dependencies\\n           run: npm install\\n\\n         - name: Run tests\\n           run: npm test\\n\\n         - name: Publish to npm\\n           run: npm publish\\n           env:\\n             NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\\n   ```\\n\\n   **Note:** Ensure you add your `NPM_TOKEN` as a secret in your GitHub repository. Following this link https://stackoverflow.com/questions/70631423/github-action-for-npm-publish-fails to get correct NPM secret\\n\\n2. **Configure GitHub Actions to Deploy Docusaurus Documentation**\\n\\n   - Add another workflow file for deploying Docusaurus documentation:\\n\\n   ```bash\\n   touch .github/workflows/deploy-docs.yml\\n   ```\\n\\n   - Edit the `deploy-docs.yml` file:\\n```yaml\\nname: Deploy Docusaurus Documentation\\n\\non:\\n  push:\\n    paths:\\n      - \'.github/workflows/deploy-doc.yml\'\\n      - \'docs/**\'\\n    # Review gh actions docs if you want to further define triggers, paths, etc\\n    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\\n\\njobs:\\n  deploy:\\n    name: Deploy Docusaurus to GitHub Pages\\n    runs-on: ubuntu-latest\\n    defaults:\\n      run:\\n        working-directory: ./docs\\n\\n    steps:\\n      - uses: actions/checkout@v3\\n\\n      - name: Setup Node\\n        uses: actions/setup-node@v3\\n        with:\\n          node-version: 18\\n          cache: npm\\n\\n      - name: Install dependencies\\n        run: npm install --frozen-lockfile\\n\\n      - name: Build website\\n        run: npm run build\\n\\n      # Popular action to deploy to GitHub Pages:\\n      # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus\\n      - name: Deploy to GitHub Pages\\n        uses: peaceiris/actions-gh-pages@v4\\n        # Only publish when the changes was made on main branch\\n        if: github.ref == \'refs/heads/main\'\\n        with:\\n          github_token: ${{ secrets.GH_TOKEN }}\\n          # Build output to publish to the `gh-pages` branch:\\n          publish_dir: ./docs/build\\n```\\n\\n   **Note:** Ensure you add your `GH_TOKEN` as a secret in your GitHub repository.\\n\\n   4. **Setup Github Page**\\n   \\n   Under your repository name, click  Settings. If you cannot see the \\"Settings\\" tab, select the  dropdown menu, then click Settings. Following setting as image below:\\n\\n   ![Github Page](./setup-github-page.jpg)\\n\\n### 4. **Commit, Push, and Deploy**\\n\\n1. **Add all files:**\\n   ```bash\\n   git add .\\n   git commit -m \\"Set up Node.js package, GitHub Actions, and Docusaurus documentation\\"\\n   ```\\n\\n2. **Push to GitHub:**\\n   ```bash\\n   git push origin main\\n   ```\\n\\n### Final Structure\\n\\nYour project structure should look like this:\\n\\n```\\nmy-node-package/\\n\u2502\\n\u251c\u2500\u2500 .github/\\n\u2502   \u2514\u2500\u2500 workflows/\\n\u2502       \u251c\u2500\u2500 publish.yml\\n\u2502       \u2514\u2500\u2500 deploy-docs.yml\\n\u2502\\n\u251c\u2500\u2500 docs/\\n\u2502   \u251c\u2500\u2500 docusaurus.config.js\\n\u2502   \u251c\u2500\u2500 src/\\n\u2502   \u251c\u2500\u2500 static/\\n\u2502   \u251c\u2500\u2500 ...\\n\u2502\\n\u251c\u2500\u2500 node_modules/\\n\u2502\\n\u251c\u2500\u2500 .gitignore\\n\u251c\u2500\u2500 package.json\\n\u2514\u2500\u2500 README.md\\n```\\n\\nWith this setup:\\n\\n- The Node.js package will be automatically published to npm when you push a new tag matching the pattern `v*.*.*`.\\n- Documentation will be automatically built and deployed to GitHub Pages when changes are pushed to the `main` branch."}]}}')}}]);